server {
    listen ${FE_PORT};
    server_name ${FE_SERVER_NAME};

__IF${FORCE_HTTPS}THEN__
    if (${D}http_x_forwarded_proto = "http") {
        return 301 https://${D}host${D}request_uri;
    }
__ENDIF__

    location /assets {
      root /srv/public;
    }

    location /3d {
      alias /srv/kscope;
      location /3d/index.html {
        ssi on;
      }
    }

    # for warper uploads
    client_max_body_size ${FE_CLIENT_MAX_BODY_SIZE};

    location /healthz {
      return 200 "ok\n";
    }

    #
    # oauth endpoints routed to oauth-proxy:4180
    #
    location /oauth2/ {
        proxy_pass http://oauth-proxy:4180;
        proxy_set_header Host                    ${D}host;
        proxy_set_header X-Real-IP               ${D}remote_addr;
        proxy_set_header X-Scheme                ${D}scheme;
        proxy_set_header X-Auth-Request-Redirect ${D}request_uri;
        # or, if you are handling multiple domains:
        #     # proxy_set_header X-Auth-Request-Redirect ${D}scheme://${D}host${D}request_uri;
    }
    location /oauth2/auth {
        proxy_pass       http://oauth-proxy:4180;
        proxy_set_header Host             ${D}host;
        proxy_set_header X-Real-IP        ${D}remote_addr;
        proxy_set_header X-Scheme         ${D}scheme;
        # nginx auth_request includes headers but not body
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
    }

    #
    # requests from iD editor routed to cgimap:8000 via fastcgi
    #
    location ~ ^${EDITOR_SITE_PREFIX}/api/0\.6/map.*${D} {
        include /etc/nginx/shared-conf/oauth-proxy.conf;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass cgimap:8000;
        access_log /var/log/nginx/api.map.access.log combined;
    }
    location ~ ^${EDITOR_SITE_PREFIX}/api/0\.6/changeset/[0-9]+${D} {
        include /etc/nginx/shared-conf/oauth-proxy.conf;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass cgimap:8000;
        access_log /var/log/nginx/api.changeset.access.log combined;
    }
    location ~ ^${EDITOR_SITE_PREFIX}/api/0\.6/(node|way|relation)/[0-9]+${D} {
        include /etc/nginx/shared-conf/oauth-proxy.conf;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass cgimap:8000;
        access_log /var/log/nginx/api.n-w-r.access.log combined;
    }

    #
    # all other ${EDITOR_SITE_PREFIX} requests routed to editor
    #
    location ${EDITOR_SITE_PREFIX} {
        return 302 ${D}scheme://${D}http_host${EDITOR_SITE_PREFIX}/;
    }
    location ${EDITOR_SITE_PREFIX}/ {
        include /etc/nginx/shared-conf/oauth-proxy.conf;
        proxy_set_header Host ${FE_SERVER_NAME};
        proxy_pass http://editor:${EDITOR_PORT};
        access_log /var/log/nginx/editor.access.log combined;
    }

    #
    # ${MAPWARPER_SITE_PREFIX} requests routed to warper
    #
    location ${MAPWARPER_SITE_PREFIX} {
        return 302 ${D}scheme://${D}http_host${MAPWARPER_SITE_PREFIX}/;
    }
    location ${MAPWARPER_SITE_PREFIX}/ {
        include /etc/nginx/shared-conf/oauth-proxy.conf;
        proxy_set_header Host ${FE_SERVER_NAME};
        proxy_pass http://warper:${MAPWARPER_PORT};
        proxy_read_timeout 150;
        access_log /var/log/nginx/warper.access.log combined;
    }

__IF${ENABLE_RESERVOIR}THEN__
    location /r {
        return 302 ${D}scheme://${D}http_host/r/;
    }
    
    location /r/ {
        include /etc/nginx/shared-conf/oauth-proxy.conf;
        proxy_pass http://reservoir:${RESERVOIR_PORT};
        access_log /var/log/nginx/reservoir.access.log combined;
        error_log /var/log/nginx/reservoir.error.log info;
    }

    location /r/api/ {
        proxy_pass http://reservoir:${RESERVOIR_PORT};
        access_log /var/log/nginx/reservoir.api.access.log combined;
        error_log /var/log/nginx/reservoir.api.error.log info;
    }
__ENDIF__

__IF${ENABLE_KARTTA}THEN__
    location = /faq {
      proxy_pass http://kartta:${KARTTA_PORT}/faq.html;
      proxy_redirect off;
      access_log /var/log/nginx/kartta.access.log combined;
    }

    location = /help {
      proxy_pass http://kartta:${KARTTA_PORT}/help.html;
      proxy_redirect off;
      access_log /var/log/nginx/kartta.access.log combined;
    }

    location = /about {
      proxy_pass http://kartta:${KARTTA_PORT}/about.html;
      proxy_redirect off;
      access_log /var/log/nginx/kartta.access.log combined;
    }

    location = /attributions {
      proxy_pass http://kartta:${KARTTA_PORT}/attributions.html;
      proxy_redirect off;
      access_log /var/log/nginx/kartta.access.log combined;
    }

    location / {
      proxy_pass http://kartta:${KARTTA_PORT};
      proxy_redirect off;
      proxy_set_header Host ${D}host;
      access_log /var/log/nginx/kartta.access.log combined;
    }
__ENDIF__


__IF${ENABLE_FE_ID}THEN__
    location /id {
     return 302 ${D}scheme://${D}http_host/id/;
    }
    location /id/ {
       include /etc/nginx/shared-conf/oauth-proxy.conf;
       rewrite /id(/.*) /${D}1 break;
       proxy_pass http://id:8080;
       proxy_redirect off;
       proxy_set_header Host ${D}host;
       access_log /var/log/nginx/id.access.log combined;
    }            
__ENDIF__

__IF${ENABLE_NOTER}THEN__
    location /nf {
      return 302 ${D}scheme://${D}http_host/nf/;
    }
    location /nf/ {
      include /etc/nginx/shared-conf/oauth-proxy.conf;
      rewrite /nf/(.*) /${D}1 break;
      proxy_pass http://noter-frontend:${NOTER_FRONTEND_PORT};
      access_log /var/log/nginx/nf.access.log combined;
      error_log /var/log/nginx/nf.debug.log debug;
    }
    location /nb {
      return 302 ${D}scheme://${D}http_host/nb/;
    }
    location /nb/ {
      include /etc/nginx/shared-conf/oauth-proxy.conf;
      rewrite /nb/(.*) /${D}1 break;
      proxy_pass http://noter-backend:${NOTER_BACKEND_PORT};
      access_log /var/log/nginx/nb.access.log combined;
      error_log /var/log/nginx/nb.debug.log debug;
    }
__ENDIF__

}
